{"version":3,"sources":["TableComponents/createRows.js","TableComponents/MyDataTable.js","App.js","reportWebVitals.js","index.js"],"names":["createRows","textValue","switchValue","selectValue","MyDataTable","useState","enabled","setEnabled","rows","TableContainer","sx","maxWidth","margin","marginTop","component","Paper","Table","TableHead","TableRow","height","scheme","map","TableCell","align","header","TableBody","row","id","border","className","defaultValue","readOnly","onBlur","onDoubleClick","e","target","value","InputLabel","Select","labelId","label","onClick","menuOptions","menu","MenuItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ufAKeA,MAJf,SAAoBC,EAAWC,EAAaC,GACxC,MAAO,CAAEF,YAAWC,cAAaC,gB,eCaxBC,EAAc,WAEzB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAGMC,EAAO,CAEXR,EAAW,WAAW,EAAO,MAC7BA,EAAW,WAAW,EAAO,MAC7BA,EAAW,WAAW,EAAO,MAC7BA,EAAW,WAAW,EAAO,OAG/B,OACE,cAACS,EAAA,EAAD,CAAgBC,GAAI,CAAEC,SAAU,IAAKC,OAAQ,OAAQC,UAAW,OAASC,UAAWC,IAApF,SACE,eAACC,EAAA,EAAD,CAAO,aAAW,eAAlB,UAEE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAUR,GAAI,CAAES,OAAQ,QAAxB,SAEGC,EAAOC,KAAI,SAACD,GAAD,OACV,cAACE,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BH,EAAOI,gBAKxC,cAACC,EAAA,EAAD,UAEGjB,EAAKa,KAAI,SAACK,EAAKC,GAAN,OACR,eAACT,EAAA,EAAD,CAEER,GAAI,CAAE,mCAAoC,CAAEkB,OAAQ,GAAKT,OAAQ,QAFnE,UAIE,cAACG,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA0B,uBAAOM,UAAU,UAAUC,aAAcJ,EAAIzB,UAAW8B,SAAUzB,EAAS0B,OAAQ,kBAAMzB,GAAW,IAAO0B,cAAe,kBAAM1B,GAAW,QACrK,cAACe,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA0B,uBAAOM,UAAU,UAAUE,SAAS,OAAOE,cAAe,SAACC,GAAQA,EAAEC,OAAOC,MAA4B,UAAnBF,EAAEC,OAAOC,MAAoB,OAAS,SAAYA,MAAOV,EAAIxB,gBAC5K,eAACoB,EAAA,EAAD,CAAWC,MAAM,SAAjB,UACE,cAACc,EAAA,EAAD,CAAYV,GAAG,2BAAf,qBACA,cAACW,EAAA,EAAD,CACEC,QAAQ,2BACRZ,GAAG,qBACHI,SAAUzB,EACVkC,MAAM,UACNR,OAAQ,kBAAMzB,GAAW,IAAOkC,QAAS,kBAAMlC,GAAW,IAL5D,SAOGmC,EAAYrB,KAAI,SAACsB,GAAD,OAEf,cAACC,EAAA,EAAD,CAAUR,MAAOO,EAAKP,MAAtB,SAA8BO,EAAKP,kBAhBpCT,cCjCJkB,MARf,WACE,OACE,qBAAKhB,UAAU,MAAf,SACA,cAAC,EAAD,OCKWiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ec8c5c58.chunk.js","sourcesContent":["// create rows by passing the data into the method\nfunction createRows(textValue, switchValue, selectValue) {\n    return { textValue, switchValue, selectValue };\n  }\n\nexport default createRows;","import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { useState } from 'react';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport scheme from '../tableJSON/schema.json';\nimport createRows from './createRows';\nimport menuOptions from '../tableJSON/menuOptions.json';\nexport const MyDataTable = () => {\n\n  const [enabled, setEnabled] = useState(true);\n\n  // table rows\n  const rows = [\n    // create data for rows\n    createRows(\"my text\", false, \"10\"),\n    createRows(\"my text\", false, \"20\"),\n    createRows(\"my text\", false, \"30\"),\n    createRows(\"my text\", false, \"40\"),\n  ];\n\n  return (\n    <TableContainer sx={{ maxWidth: 800, margin: 'auto', marginTop: \"10%\" }} component={Paper}>\n      <Table aria-label=\"simple table\">\n\n        <TableHead>\n          <TableRow sx={{ height: '40px'}} >\n            {/* Creating dynamic table scheme */}\n            {scheme.map((scheme) => (\n              <TableCell align=\"center\">{scheme.header}</TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {/* dynamically creating table rows. */}\n          {rows.map((row, id) => (\n            <TableRow\n              key={id}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 }, height: '40px', }}\n            >\n              <TableCell align=\"center\"><input className=\"myinput\" defaultValue={row.textValue} readOnly={enabled} onBlur={() => setEnabled(true)} onDoubleClick={() => setEnabled(false)} /></TableCell>\n              <TableCell align=\"center\"><input className=\"myinput\" readOnly=\"true\" onDoubleClick={(e) => { e.target.value = (e.target.value === \"false\" ? \"true\" : \"false\") }} value={row.switchValue} /></TableCell>\n              <TableCell align=\"center\">\n                <InputLabel id=\"demo-simple-select-label\">Options</InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  readOnly={enabled}\n                  label=\"Options\"\n                  onBlur={() => setEnabled(true)} onClick={() => setEnabled(false)}\n                >\n                  {menuOptions.map((menu) =>\n\n                    <MenuItem value={menu.value}>{menu.value}</MenuItem>\n\n                  )}\n                </Select>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\n","// import logo from './logo.svg';\nimport './App.css';\nimport {MyDataTable} from './TableComponents/MyDataTable';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <MyDataTable/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}